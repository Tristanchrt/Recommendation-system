version: "3.7"
services:

  rabbitmq-message:
    image: 'rabbitmq:3.6-management-alpine'
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5
    networks:
      - message_broker
  
  watcher:
    build: watcher/.
    restart: on-failure
    environment:
      - MQ_HOST=rabbitmq-message
    volumes:
      - ./images:/images
    depends_on:
      - rabbitmq-message
    networks:
      - message_broker

  download:
    build: download/.
    restart: on-failure
    environment:
      - MQ_HOST=rabbitmq-message
    volumes:
      - ./images:/images
    depends_on:
      - rabbitmq-message
      - watcher

 

  metadata:
    build: metadata/.
    restart: on-failure
    environment:
      - MQ_HOST=rabbitmq-message
    volumes:
      - ./images:/images
    depends_on:
      - watcher
    networks:
      - message_broker

  users_preferences:
    build: user_preferences/.
    restart: on-failure
    environment:
      - MQ_HOST=rabbitmq-message
    volumes:
      - ./images:/images
    depends_on:
      - watcher
    networks:
      - message_broker


  recommandation:
    build: recommandation/.
    restart: on-failure
    environment:
      - MQ_HOST=rabbitmq-message
    volumes:
      - ./images:/images
    depends_on:
      - watcher
    networks:
      - message_broker

  notebook:
    image: jupyter/datascience-notebook
    #Paramètres du port("Hôte: Container")
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - .:/home/jovyan/work
    command: start-notebook.sh --NotebookApp.token=''
    depends_on:
      - watcher




networks:
  message_broker:
    external:
      name: message_broker

volumes:
  images: {}
